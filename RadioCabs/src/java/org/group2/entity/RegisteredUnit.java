package org.group2.entity;
// Generated Nov 14, 2013 6:33:44 PM by Hibernate Tools 3.2.1.GA

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import org.group2.util.HibernateUtil;
import org.hibernate.Session;

/**
 * RegisteredUnit generated by hbm2java
 */
public class RegisteredUnit implements java.io.Serializable {

    private String registrationId;
    private RegisteredType registeredType;
    private String name;
    private String password;
    private String contactPerson;
    private String designation;
    private String faxNumber;
    private Integer membershipType;
    private String city;
    private Integer experience;
    private String description;
    private String address;
    private String mobile;
    private String telephone;
    private String email;
    private Set<Billing> billings = new HashSet<Billing>(0);

    public RegisteredUnit() {
    }

    public RegisteredUnit(String registrationId, String name) {
        this.registrationId = registrationId;
        this.name = name;
    }

    public RegisteredUnit(String registrationId, RegisteredType registeredType, String name, String password, String contactPerson, String designation, String faxNumber, Integer membershipType, String city, Integer experience, String description, String address, String mobile, String telephone, String email, Set<Billing> billings) {
        this.registrationId = registrationId;
        this.registeredType = registeredType;
        this.name = name;
        this.password = password;
        this.contactPerson = contactPerson;
        this.designation = designation;
        this.faxNumber = faxNumber;
        this.membershipType = membershipType;
        this.city = city;
        this.experience = experience;
        this.description = description;
        this.address = address;
        this.mobile = mobile;
        this.telephone = telephone;
        this.email = email;
        this.billings = billings;
    }

    public String getRegistrationId() {
        return this.registrationId;
    }

    public void setRegistrationId(String registrationId) {
        this.registrationId = registrationId;
    }

    public RegisteredType getRegisteredType() {
        return this.registeredType;
    }

    public void setRegisteredType(RegisteredType registeredType) {
        this.registeredType = registeredType;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getContactPerson() {
        return this.contactPerson;
    }

    public void setContactPerson(String contactPerson) {
        this.contactPerson = contactPerson;
    }

    public String getDesignation() {
        return this.designation;
    }

    public void setDesignation(String designation) {
        this.designation = designation;
    }

    public String getFaxNumber() {
        return this.faxNumber;
    }

    public void setFaxNumber(String faxNumber) {
        this.faxNumber = faxNumber;
    }

    public Integer getMembershipType() {
        return this.membershipType;
    }

    public void setMembershipType(Integer membershipType) {
        this.membershipType = membershipType;
    }

    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public Integer getExperience() {
        return this.experience;
    }

    public void setExperience(Integer experience) {
        this.experience = experience;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getMobile() {
        return this.mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
    }

    public String getTelephone() {
        return this.telephone;
    }

    public void setTelephone(String telephone) {
        this.telephone = telephone;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Set<Billing> getBillings() {
        return this.billings;
    }

    public void setBillings(Set<Billing> billings) {
        this.billings = billings;
    }
    private List<Billing> listBillings;

    public List<Billing> getListBillings() {
        //billings (set) is not reload ???
        HibernateUtil.getSessionFactory().openSession().refresh(this);
        if (billings != null) {
            listBillings = new ArrayList<Billing>(billings);
            Collections.sort(listBillings, new Comparator<Billing>() {
                @Override
                public int compare(Billing o1, Billing o2) {
                    return o2.getExpriateDate().compareTo(o1.getExpriateDate());
                }
            });
            return listBillings;
        } else {
            return null;
        }
    }

    public Billing getLastestBilling() {
        return getListBillings().get(0);
    }
    boolean status = false;

    public boolean getStatus() {
        List bills = getListBillings();
        if (bills == null || bills.isEmpty()) {
            status = false;
        } else {
            Date expiredDate = getLastestBilling().getExpriateDate();
            if (expiredDate == null) {
                status = false;
            } else {
                status = expiredDate.compareTo(new Date()) >= 0;
            }
        }
        return status;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (obj instanceof RegisteredUnit) {
            return ((RegisteredUnit) obj).registrationId.equals(this.registrationId);
        } else {
            return false;
        }
    }
}
